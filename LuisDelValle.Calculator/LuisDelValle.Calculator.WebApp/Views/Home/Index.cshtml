@model SequencesViewModel

<h2>Numeric Sequence Calculator</h2>

<form asp-action="Index" asp-controller="Home" method="post">
    <div asp-validation-summary="ModelOnly"></div>

    <div>
        <label asp-for="InputNumber"></label>
        <input asp-for="InputNumber" />
        <span asp-validation-for="InputNumber"></span>
    </div>

    <input type="submit" value="send" />
</form>

@if (Model.Sequences != null)
{
    string listNumbers = String.Empty;

    <h3>Sequences:</h3>

    if (Model.Sequences.AllNumbersSequence != null)
    {
        foreach (var num in Model.Sequences.AllNumbersSequence)
        {
            listNumbers += num + " ";
        }
        <p>Sequence with all numbers: @listNumbers</p>
    }

    if (Model.Sequences.OddNumbersSequence != null)
    {
        listNumbers = String.Empty;
        foreach (var num in Model.Sequences.OddNumbersSequence)
        {
            listNumbers += num + " ";
        }
        <p>Sequence with odd numbers: @listNumbers</p>
    }

    if (Model.Sequences.EvenNumbersSequence != null)
    {
        listNumbers = String.Empty;
        foreach (var num in Model.Sequences.EvenNumbersSequence)
        {
            listNumbers += num + " ";
        }
        <p>Sequence with even numbers: @listNumbers</p>
    }

    if (Model.Sequences.AllNumbersSecondSequence == null)
    {
        <p>Special Character: @Model.Sequences.CharacterOutput</p>
    }
    else
    {
        listNumbers = String.Empty;
        foreach (var num in Model.Sequences.AllNumbersSecondSequence)
        {
            listNumbers += num + " ";
        }
        <p>Second sequence with all numbers: @listNumbers</p>
    }
}